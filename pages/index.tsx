import React, { useContext, useEffect } from "react";
import Head from "next/head";
import { Container, Theme, useTheme } from "@mui/material";
import { Box } from "@mui/system";
import Grid2 from "@mui/material/Unstable_Grid2"; // Grid version 2
import Table from "../components/Table";
import Link from "next/link";
import SearchBar2 from "../components/SearchBar";
import Sidebar2 from "../components/Sidebar";
import { AppContext } from "./_app";
import styled from "@emotion/styled";
import Card2 from "../components/Card";
import useGetData from "../hooks/useGetData";

const drawerWidth = 240;
export const StyledBox = styled(Box)<{ opendrawer: string; theme: Theme }>(
	({ theme, opendrawer }) => ({
		transition: theme.transitions.create(["margin", "width"], {
			easing: theme.transitions.easing.sharp,
			duration: theme.transitions.duration.leavingScreen,
		}),
		...(opendrawer === "true" && {
			[theme.breakpoints.up("md")]: {
				marginLeft: `${drawerWidth}px`,
				transition: theme.transitions.create(["margin", "width"], {
					easing: theme.transitions.easing.easeOut,
					duration: theme.transitions.duration.enteringScreen,
				}),
			},
		}),
	}),
);

export type Item = {
	_id: string;
	name: string;
	price: number;
	stock: number;
	description: string;
	img_url: string;
	category: {
		_id: string;
		name: string;
		description: string;
	};
};

export type Category = {
	_id: string;
	name: string;
	description: string;
};

const dev = process.env.NODE_ENV !== "production";
export const server = dev
	? process.env.NEXT_PUBLIC_API_URL
	: `https://${process.env.NEXT_PUBLIC_VERCEL_URL}`;

export default function Home() {
	// export default function Home({
	// 	serverItems,
	// 	serverCategories: serverCategories,
	// }: { serverItems: Item[]; serverCategories: Category[] }) {
	const {
		view,
		isRemoveMode,
		openSidebar,
		searchValue,
		items,
		setItems,
		categories,
		setCategories,
    refetch,
} = useContext(AppContext);
	const theme = useTheme();
	useGetData(setItems, setCategories, refetch);
	return (
		<>
			<Head>
				<title>Inventory</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<SearchBar2 />
			<Sidebar2 categories={categories} />
			<main>
				<StyledBox
					theme={theme}
					opendrawer={openSidebar.toString()}
					sx={{ flexGrow: 1 }}
				>
					{view === "grid" ? (
						<Grid2
							container={true}
							mt={4}
							mx={2}
							spacing={{ xs: 2, md: 6 }}
							columns={{ xs: 4, sm: 8, md: 12 }}
							justifyContent="center"
						>
							{items
								?.filter((item) =>
									item.name.toLowerCase().includes(searchValue.toLowerCase()),
								)
								.map((item) => (
									<Grid2
										xs={"auto"}
										key={item._id}
										sx={{
											display: "flex",
										}}
									>
										{isRemoveMode ? (
											<Card2 key={item._id} item={item} />
										) : (
											<Link
												href={`/items/${item._id}`}
												key={item._id}
												style={{ textDecoration: "none" }}
											>
												<Card2 key={item._id} item={item} />
											</Link>
										)}
									</Grid2>
								))}
						</Grid2>
					) : (
						<Container sx={{ marginTop: 4 }}>
							<Table
								items={items.filter((item) =>
									item.name.toLowerCase().includes(searchValue.toLowerCase()),
								)}
							/>
						</Container>
					)}
				</StyledBox>
			</main>
		</>
	);
}
